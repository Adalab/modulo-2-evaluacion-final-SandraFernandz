{"version":3,"sources":["main.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"main.js","sourcesContent":["\"use strict\";\n\nconst button = document.querySelector(\".js_button\");\nconst givenInput = document.querySelector(\".js_input\");\nconst ulList = document.querySelector(\".js_ulList\");\n\n//variable local que almacena el resultado de la búsqueda de las series introducida en el input de texto\nlet series = [];\nlet favorites = [];\n\n//función manejadora del evento click de button.addEventListener para que al hacer click en el botón, la aplicación se conecte a la api de TVMaze\nfunction handleConnectTv(ev) {\n  //variable que recoge el valor introducido por usuaria\n  let textInput = givenInput.value;\n  //parámetros a la URL de tipo clave=valor, siempre tras ? y separados por &,\n  // p.e. para pedir string con longitud determinada, la url quedaría así https://api.rand.fun/text/password?length=20\n\n  fetch(`https://api.tvmaze.com/search/shows?q=${textInput}`)\n    .then((response) => response.json())\n    .then((data) => {\n      console.log(data);\n      series = data;\n      console.log(series);\n      //función para que la búsqueda del input resulte en un listado de series con título y cartel (imagen)\n      paintSeries();\n    });\n}\n\nbutton.addEventListener(\"click\", handleConnectTv);\n\n//función para que la búsqueda del input resulte en un listado de series con título y cartel (imagen) y lo pinte en la constante global arreglo series =[];\nfunction paintSeries() {\n  let html = \"\";\n  for (const serie of series) {\n    html += `<li class= 'listItem js_listItem' id='${serie.show.id}'>`;\n    html += `<h2>${serie.show.name}</h2>`;\n    console.log(serie.show.name);\n    //bucle con if para caso en el que no exista cartel de la serie.\n    //habrá que subir la img al proyecto.\n    html += `<div main_ulList_container_li_div>`;\n    if (serie.show.image) {\n      html += `<img src=\"${serie.show.image.original}\" class=\"main_ulList_container_li_img\"/>`;\n    } else {\n      html += `<img src=\"https://via.placeholder.com/210x295/ffffff/666666/?text=TV\" alt=\"image of series\" class=\"main_ulList_container_li_img\">`;\n    }\n    html += `</div>`;\n    html += `</li>`;\n  }\n  ulList.innerHTML = html;\n  console.log(html);\n  listenListedSeries();\n}\n\n//creamos una función para poder escuchar en cada una de las series y poder marcarlas con su id si el usuario las elige como favoritas\nfunction listenListedSeries() {\n  //selecciono todos los li pintados de la lista\n  const listSeries = document.querySelectorAll(\".js_listItem\");\n  //recorro el array de los li para escuchar eventos en cada uno de ellos\n  for (const listEl of listSeries) {\n    //escucho el evento sobre cada serie de la lista\n    listEl.addEventListener(\"click\", handleList);\n  }\n}\n\n//función manejadora del evento de escuchar en cada serie y entre ellas elegir una y añadirla a favoritos\nfunction handleList(ev) {\n  //obtengo el id de la serie clickada\n  const selectedSeries = ev.currentTarget.id;\n  //selectedItem.classList.toggle(\"main_ulList_container_li_title\");\n  console.log(ev.currentTarget.id);\n  //busco la serie clickada en el array de series paso una función que tiene como parámetro cada serie\n  const clickedItem = series.find((serie) => {\n    //el id de la serie corresponde al id del elemento clickado\n    return serie.show.id === parseInt(selectedSeries);\n  });\n\n  //busco si la serie clickada está en el array de favoritos; Si no está, el valor de vuelta será -1, sino devuelve la posición. busco dentro de mi array de favoritos \"favorites\". \"fav\" hace referencia a cada uno de los elementos de del array favorites\n  const favoritesFound = favorites.findIndex((fav) => {\n    return fav.id === selectedSeries;\n  });\n\n  if (favoritesFound === -1) {\n    favorites.push(clickedItem);\n  } else {\n    favorites.splice(favoritesFound, 1);\n  }\n\n  console.log(favorites);\n  console.log(selectedSeries);\n  console.log(favoritesFound);\n}\n//creo una función que verifica si ese li(elemento que quiero pintar es un favorito), me retorna un valor y luego yo le añado la clase\n"]}